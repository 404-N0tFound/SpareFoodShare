name: LintPy

on:
  - push
  - pull_request

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10', '3.11']

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Install Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3.1.2
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          requirements_dev.txt
          setup.py

    - name: Install Pip
      run:
        python -m pip install --upgrade pip

    - name: Setup Venv
      run:
        chmod +x ./setup_env.sh
        ./setup_env.sh

    - name: Install project dependencies
      run:
        pip install -r requirements-dev.txt

    - name: Lint
      run:
        python -m flake8 --max-line-length=120 --extend-ignore=F403,F405 src/ setup.py --exclude="migrations"

    - name: Boot Project
      run:
        python ./src/manage.py test
      env:
        SECRET_KEY: 'foobar'
        FRONT_END_LOCATION: 'sparefood/templates/app/build'
        DB_NAME: 'postgres'
        DB_USER: 'postgres'
        DB_PASSWORD: 'postgres'
        DB_PORT: '5432'
        EMAIL_PASSWORD: 'barfoo'
        ALLOWED_HOSTS: '.localhost,127.0.0.1,[::1]'
        REDIRECT_EMAIL_URL: 'foo'
